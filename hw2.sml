val a = [3.0,4.0];
fun circle (x:real) : real = x * x * 3.14159;
val radius_array = Array.fromList a;
val b = [3.0,4.0];
val base_array = Array.fromList b;
val h = [8.0,7.0];
val height_array = Array.fromList h;
fun triangle (x:real, y:real) : real = 0.5 * x * y;
val s1 = [3.0,4.0];
val s1_array = Array.fromList s1;
val s2 = [1.5,3.5];
val s2_array = Array.fromList s2;
val h = [8.0,7.0];
val h_array = Array.fromList h;
fun circle (x:real) : real = x * x * 3.14159;
fun square (x:real) : real = x * x;
fun area1 (x:string, y:real) : real = if x = "circle" then circle(y) else square(y);
fun rectangle (x:real, y:real) : real = x * y;
fun triangle (x:real, y:real) : real = 0.5 * x * y;
fun parallelogram (x:real, y:real) : real = x * y;
fun ellipse (x:real, y:real) : real = 3.14159 * x * y;
fun area2 (x:string, y:real, z:real) : real = if x = "triangle" then triangle(y,z) else if x = "parallelogram" then parallelogram(y,z) else if x = "ellipse" then ellipse(y,z) else rectangle(y,z);
fun trapezoid (x:real, y:real, z:real) : real = 0.5 * (x + y) * z;
fun area3 (w:string, x:real, y:real, z:real) : real = if w = "trapezoid" then trapezoid(x,y,z) else trapezoid(x,y,z);
fun loop_circle(x:real array, y:int, z:int) : string = if y < z then "PI*" ^ Real.toString(Array.sub(radius_array,y)) ^ "^2=" ^ Real.toString(circle(Array.sub(radius_array,y))) ^ ", " ^ loop_circle(radius_array,y+1,z) else "done!!!";
fun loop_triangle (w:real array, x:real array, y:int, z:int) : string = if y < z then "1/2*" ^ Real.toString(Array.sub(base_array,y)) ^ "*" ^ Real.toString(Array.sub(height_array,y)) ^ "=" ^ Real.toString(triangle((Array.sub(base_array,y)),(Array.sub(height_array,y)))) ^ ", " ^ loop_triangle(base_array,height_array,y+1,z) else "done!!!";
fun loop_trapezoid(v:real array, w:real array, x:real array, y:int, z:int) : string = if y < z then "1/2*(" ^ Real.toString(Array.sub(s1_array,y)) ^ "+" ^ Real.toString(Array.sub(s2_array,y)) ^ ")*" ^ Real.toString(Array.sub(h_array,y)) ^ "=" ^ Real.toString(trapezoid((Array.sub(s1_array,y)),(Array.sub(s2_array,y)),(Array.sub(h_array,y)))) ^ ", " ^ loop_trapezoid(s1_array,s2_array,h_array,y+1,z) else "done!!!";